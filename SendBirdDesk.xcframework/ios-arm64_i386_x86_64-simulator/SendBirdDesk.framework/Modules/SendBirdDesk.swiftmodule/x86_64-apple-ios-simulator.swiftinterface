// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios9.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SendBirdDesk
import Foundation
@_exported import SendBirdDesk
import SendBirdSDK
import Swift
import UIKit
import _Concurrency
@objc public class SBDSKRelatedChannel : ObjectiveC.NSObject, Swift.Codable {
  @objc public var name: Swift.String
  @objc public var channelUrl: Swift.String
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class SBDSKFAQData : ObjectiveC.NSObject, Swift.Decodable {
  @objc final public let faqFileId: Swift.Int64
  @objc final public let type: Swift.String
  @objc final public let faqResults: [SendBirdDesk.SBDSKFAQData.SBDSKFAQResult]
  @objc(initWithMessage:) public init?(with message: SendBirdSDK.SBDBaseMessage)
  required public init(from decoder: Swift.Decoder) throws
  @objc public class SBDSKFAQResult : ObjectiveC.NSObject, Swift.Decodable {
    @objc final public let category: Swift.String?
    @objc final public let question: Swift.String?
    @objc final public let answer: Swift.String?
    @objc final public let keyword: Swift.String?
    @objc final public let url: Swift.String?
    @objc final public let imageURL: Swift.String?
    required public init(from decoder: Swift.Decoder) throws
    @objc deinit
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class SBDSKMain : ObjectiveC.NSObject {
  @discardableResult
  @objc public static func initializeDesk() -> Swift.Bool
  @objc public static func getSDKVersion() -> Swift.String
  @available(*, deprecated, renamed: "getSDKVersion()", message: "Deprecated in 1.0.17")
  @objc public static func getSdkVersion() -> Swift.String
  @objc public static func setCompletionHandlerDelegateQueue(_ queue: Dispatch.DispatchQueue)
  @objc(authenticateWithUserId:accessToken:completionHandler:) public static func authenticate(withUserId userId: Swift.String, accessToken: Swift.String? = nil, completionHandler: SendBirdDesk.SBDSKErrorHandler?)
  @objc public static func isDeskChannel(_ channel: SendBirdSDK.SBDBaseChannel) -> Swift.Bool
  @objc public static func setCustomerCustomFields(_ customFields: [Swift.String : Swift.String], completionHandler: SendBirdDesk.SBDSKErrorHandler?)
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum SBDSKTicketPriority : Swift.Int, Swift.Codable {
  case low = 0
  case medium = 1
  case high = 2
  case urgent = 3
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public typealias SBDSKErrorHandler = (_ error: SendBirdSDK.SBDError?) -> Swift.Void
public typealias SBDSKTicketHandler = (_ ticket: SendBirdDesk.SBDSKTicket?, _ error: SendBirdSDK.SBDError?) -> Swift.Void
public typealias SBDSKTicketListHandler = (_ tickets: [SendBirdDesk.SBDSKTicket]?, _ hasNext: Swift.Bool, _ error: SendBirdSDK.SBDError?) -> Swift.Void
@objc public class SBDSKTicket : ObjectiveC.NSObject, Swift.Codable {
  @objc public var ticketId: Swift.Int64 {
    get
  }
  @objc public var title: Swift.String? {
    get
  }
  @objc public var status: Swift.String? {
    get
  }
  @objc public var agent: SendBirdDesk.SBDSKAgent? {
    get
  }
  @objc public var channel: SendBirdSDK.SBDGroupChannel? {
    get
  }
  @objc public var customFields: [Swift.String : Swift.String] {
    get
  }
  @objc public var priority: SendBirdDesk.SBDSKTicketPriority {
    get
  }
  @objc public var relatedChannels: [SendBirdDesk.SBDSKRelatedChannel] {
    get
  }
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
  @objc deinit
}
extension SendBirdDesk.SBDSKTicket {
  @objc dynamic public func refresh(completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(closeWithComment:completionHandler:) dynamic public func close(with comment: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "close(with:completionHandler:)", message: "Deprecated in 1.0.17")
  public func close(withComment comment: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(confirmEndOfChatWithMessage:confirm:completionHandler:) public static func confirmEndOfChat(with message: SendBirdSDK.SBDUserMessage, confirm: Swift.Bool, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:priority:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, priority: SendBirdDesk.SBDSKTicketPriority, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:priority:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, priority: SendBirdDesk.SBDSKTicketPriority, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:groupKey:customFields:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:groupKey:customFields:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:groupKey:customFields:priority:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, priority: SendBirdDesk.SBDSKTicketPriority, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:groupKey:customFields:priority:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, priority: SendBirdDesk.SBDSKTicketPriority, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:relatedChannels:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, relatedChannels: [Swift.String]?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:relatedChannels:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, relatedChannels: [Swift.String]?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:groupKey:customFields:priority:relatedChannels:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, priority: SendBirdDesk.SBDSKTicketPriority, relatedChannels: [Swift.String]?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:groupKey:customFields:priority:relatedChannels:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, priority: SendBirdDesk.SBDSKTicketPriority, relatedChannels: [Swift.String]?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(createTicketWithTitle:userName:groupKey:customFields:priority:relatedChannels:botKey:completionHandler:) public static func createTicket(with title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, priority: SendBirdDesk.SBDSKTicketPriority, relatedChannels: [Swift.String]?, botKey: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @available(*, deprecated, renamed: "createTicket(with:userName:groupKey:customFields:priority:relatedChannels:botKey:completionHandler:)", message: "Deprecated in 1.0.17")
  public static func createTicket(withTitle title: Swift.String?, userName: Swift.String?, groupKey: Swift.String?, customFields: [Swift.String : Swift.String]?, priority: SendBirdDesk.SBDSKTicketPriority, relatedChannels: [Swift.String]?, botKey: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc public static func getOpenCount(completionHandler: ((_ count: Swift.Int, _ error: SendBirdSDK.SBDError?) -> Swift.Void)? = nil)
  @objc(getOpenedListWithOffset:completionHandler:) public static func getOpenedList(withOffset offset: Swift.Int, completionHandler: SendBirdDesk.SBDSKTicketListHandler? = nil)
  @objc(getOpenedListWithOffset:customFieldFilter:completionHandler:) public static func getOpenedList(withOffset offset: Swift.Int, customFieldFilter: [Swift.String : Swift.String]? = nil, completionHandler: SendBirdDesk.SBDSKTicketListHandler? = nil)
  @objc(getClosedListWithOffset:completionHandler:) public static func getClosedList(withOffset offset: Swift.Int, completionHandler: SendBirdDesk.SBDSKTicketListHandler?)
  @objc(getClosedListWithOffset:customFieldFilter:completionHandler:) public static func getClosedList(withOffset offset: Swift.Int, customFieldFilter: [Swift.String : Swift.String]? = nil, completionHandler: SendBirdDesk.SBDSKTicketListHandler? = nil)
  @objc(getByChannelUrl:completionHandler:) public static func getByChannelURL(_ channelUrl: Swift.String, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc dynamic public func reopen(completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc(submitFeedbackWithMessage:score:comment:completionHandler:) public static func submitFeedback(with message: SendBirdSDK.SBDUserMessage, score: Swift.Int, comment: Swift.String? = nil, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc dynamic public func setCustomFields(_ customFields: [Swift.String : Swift.String], completionHandler: SendBirdDesk.SBDSKErrorHandler? = nil)
  @objc dynamic public func setPriority(_ priority: SendBirdDesk.SBDSKTicketPriority, completionHandler: SendBirdDesk.SBDSKErrorHandler? = nil)
  @objc dynamic public func setRelatedChannels(_ relatedChannels: [Swift.String], completionHandler: SendBirdDesk.SBDSKErrorHandler? = nil)
  @objc(cancelWithGroupKeyForTransfer:completionHandler:) dynamic public func cancel(groupKeyForTransfer: Swift.String?, completionHandler: SendBirdDesk.SBDSKTicketHandler? = nil)
  @objc dynamic public func selectQuestion(faqFileId: Swift.Int64, question: Swift.String, completionHandler: SendBirdDesk.SBDSKErrorHandler? = nil)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class SBDSKAgent : ObjectiveC.NSObject, Swift.Codable {
  @objc public var sendBirdId: Swift.String? {
    get
  }
  @objc public var name: Swift.String? {
    get
  }
  @objc public var profileUrl: Swift.String? {
    get
  }
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
extension SendBirdDesk.SBDSKTicketPriority : Swift.Equatable {}
extension SendBirdDesk.SBDSKTicketPriority : Swift.Hashable {}
extension SendBirdDesk.SBDSKTicketPriority : Swift.RawRepresentable {}
